1. 최대공약수( GCD )

public static int gcd(int a, int b) {
    if (b == 0) {
        return a;
    }
    return gcd(b, a % b);
}

2. 최소공배수( LCM ) 
public static int lcm(int a, int b) {
    return a * b / gcd(a, b);
}

3. 소인수분해 (factorization)
public static void factorization(int n) {
    for (int i = 2; i <= n; i++) {
        while (n % i == 0) {
            (Collections).add(or put, append....)(i);
            n /= i;
        }
    }
}

4. a / b가 유한소수인지 구하기 (최대공약수 응용)
class Solution {
    public int solution(int a, int b) {
        int[] primes = {2, 5}; // 소인수
        int gcd = getGcd(a,b);

        int denominator = b/gcd; // 분모

        // 분모를 소인수분해하여 2와 5만 있는지 확인
        for (int prime : primes) {
            while (denominator % prime == 0) {
                denominator /= prime;
            }
        }

        // 2와 5 이외의 소인수가 있다면 무한소수
        if (denominator > 1) {
            return 2;
        } else {
            return 1;
        }
    }


    public int getGcd(int a, int b){
        if(b == 0){
            return a;
        }else{
            return getGcd(b, a%b);
        }
    }

}
