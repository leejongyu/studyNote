1. JAVA? : 객체지향언어를 사용하는 프로그래밍 언어. 자바 버츄얼 머신을 통해 다른 운영체제에서도 사용가능.

2. 객체지향의 특징 : 상태와 행위로 이루어진 객체들을 만들고, 그들로 하나의 프로그램을 만드는 것. 유지보수가 편하다는 장점.
                   캡슐화 : 변수와 메서드를 묶어서 사용 가능. 
                   상속 : 부모클래스와 자식클래스로 나뉨. 상속을 받은 자식클래스에서는 따로 정의하지 않아도 부모클래스의 기능들을 사용할 수 있음.
                          > overiding : 부모클래스의 기능들 중에서, 재정의가 필요한 메서드의 경우에 부모클래스와 다른 기능을 부여할 때 사용
                          > overloading : 메서드의 이름이 같고, 매개변수의 타입이나 개수 등이 달라서 중복 정의가 필요한 경우 사용
                   다형성 : 하나의 객체가 오버로딩, 오버라이딩으로 다양한 방식으로 동작하는 것

3. 기본형 변수와 참조형 변수 :
   - 기본형 변수 : int, float, boolean 등의 타입. 변수를 선언하면 stack 영역에 실제 값이 저장된다.
   - 참조형 변수 : 기본타입 이외의 변수들. 변수를 선언하면 stack 영역에는 참조 주소를 저장하고, heap 영역에 실제 값을 저장

4. Garbage collector : heap 영역에 필요 없어진 변수들을 자동으로 삭제 해주는 기능. 

5. 익명클래스 : 인터페이스를 일회성으로 사용하거나 메서드를 상속 받을 때 일회성으로 변경이 필요한 경우 사용

6. Thread : 프로세스 내의 작업 실행 단위. runnable 인터페이스나 thread 클래스를 상속받아서 사용
            멀티쓰레드를 통해서 둘 이상의 작업을 동시에 수행 가능

7 Spring : Java로 웹페이지를 개발할 수 있는 프레임워크

8. 쿠키와 세션의 차이 : 쿠키 = 클라이언트 로컬에 저장, 세션 = 서버에 저장

9. Git 장점 : 협업에 용하고, 커밋과 복원이 가능한 장점이 있다고 생각.

10. JSP(Java Server Pages) : Java Servlet으로 변환되어 서버에서 동작 후 웹페이지를 클라이언트에 응답
                            Servlet : 웹페이지를 동적으로 생성하는 서버 프로그램. Java 코드 안에 Html코드가 들어있음. 

11. MyBatis : 관계형 데이터베이스를 조금 더 쉽게 다룰 수 있게 도와주 프레임워크 JDBC의 중복작업을 제거해주고, SQL쿼리와 자바 객체를 맵핑.
