String객체를 사용하여 더하기, 곱하기 등을 할 때에는 새로운 String 객체를 계속해서 생성하게 된다.
즉, 문자열의 길이가 길어질수록 객체를 생성하는 빈도가 높아지고, 메모리를 많이 사용하게 되는 것이다. 
또한, String 객체는 불변 객체이므로 문자열을 더할 때마다 새로운 객체를 생성해야 한다.

반면에 StringBuilder는 가변적인 문자열을 처리하는 클래스로, 문자열을 더할 때마다 새로운 객체를 생성하지 않고 내부 버퍼에 문자열을 추가한다. 
즉, 문자열을 더할 때마다 객체를 생성하지 않기 때문에 메모리 사용량이 적고, 문자열을 조작하는 속도도 빠르게 된다.

따라서, 문자열을 더하는 작업이 많은 경우에는 StringBuilder를 사용하는 것이 성능상 이점이 있다.


StringBuilder의 메서드
* append(): 문자열을 뒤에 추가합니다.
* insert(): 문자열을 특정 위치에 추가합니다.
* delete(): 특정 범위의 문자열을 삭제합니다.
* deleteCharAt(): 특정 위치의 문자를 삭제합니다.
* replace(): 특정 범위의 문자열을 다른 문자열로 대체합니다.
* substring(): 특정 범위의 문자열을 반환합니다.
* reverse(): 문자열을 뒤집습니다.
